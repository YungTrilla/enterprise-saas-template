paths:
  /users:
    get:
      tags:
        - Users
      summary: List all users
      operationId: listUsers
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/PageParam'
        - $ref: '../components/parameters.yaml#/components/parameters/LimitParam'
        - $ref: '../components/parameters.yaml#/components/parameters/SearchParam'
        - name: role
          in: query
          schema:
            type: string
        - name: department
          in: query
          schema:
            type: string
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/user.yaml#/components/schemas/UserListResponse'
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
    post:
      tags:
        - Users
      summary: Create a new user
      operationId: createUser
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/components/schemas/CreateUser'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/user.yaml#/components/schemas/User'
        '400':
          $ref: '../components/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Get user by ID
      operationId: getUserById
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/UserIdParam'
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/user.yaml#/components/schemas/User'
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../components/responses.yaml#/components/responses/NotFound'
    put:
      tags:
        - Users
      summary: Update user
      operationId: updateUser
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/components/schemas/UpdateUser'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/user.yaml#/components/schemas/User'
        '400':
          $ref: '../components/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../components/responses.yaml#/components/responses/NotFound'
    delete:
      tags:
        - Users
      summary: Delete user
      operationId: deleteUser
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/UserIdParam'
      responses:
        '204':
          description: User deleted successfully
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../components/responses.yaml#/components/responses/NotFound'
  /users/{userId}/activate:
    post:
      tags:
        - Users
      summary: Activate user account
      operationId: activateUser
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/UserIdParam'
      responses:
        '200':
          description: User activated successfully
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../components/responses.yaml#/components/responses/NotFound'
  /users/{userId}/deactivate:
    post:
      tags:
        - Users
      summary: Deactivate user account
      operationId: deactivateUser
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/UserIdParam'
      responses:
        '200':
          description: User deactivated successfully
        '401':
          $ref: '../components/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../components/responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../components/responses.yaml#/components/responses/NotFound'