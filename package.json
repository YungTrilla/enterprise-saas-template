{
  "name": "enterprise-saas-template",
  "version": "1.0.0",
  "description": "A comprehensive, production-ready template for building enterprise-grade SaaS applications",
  "private": true,
  "keywords": [
    "saas",
    "enterprise",
    "template",
    "typescript",
    "react",
    "microservices",
    "multi-tenant",
    "authentication",
    "security"
  ],
  "author": {
    "name": "Enterprise SaaS Template Team",
    "email": "contact@enterprise-saas-template.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/enterprise-saas-template.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/enterprise-saas-template/issues"
  },
  "homepage": "https://github.com/your-org/enterprise-saas-template#readme",
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@8.15.0",
  "scripts": {
    "prepare": "husky install",
    "dev": "turbo run dev",
    "dev:web": "turbo run dev --filter=web",
    "dev:auth": "turbo run dev --filter=auth-service",
    "dev:gateway": "turbo run dev --filter=api-gateway",
    "dev:notification": "turbo run dev --filter=notification-service",
    "dev:services": "turbo run dev --filter='./services/*'",
    "dev:apps": "turbo run dev --filter='./apps/*'",
    "dev:debug": "NODE_OPTIONS='--inspect' pnpm run dev",
    "build": "turbo run build",
    "build:libs": "turbo run build --filter='./libs/*'",
    "build:services": "turbo run build --filter='./services/*'",
    "build:apps": "turbo run build --filter='./apps/*'",
    "build:production": "NODE_ENV=production turbo run build",
    "build:analyze": "turbo run build:analyze",
    "test": "turbo run test",
    "test:unit": "turbo run test:unit",
    "test:integration": "turbo run test:integration",
    "test:e2e": "turbo run test:e2e",
    "test:api": "turbo run test:api",
    "test:security": "turbo run test:security",
    "test:performance": "turbo run test:performance",
    "test:coverage": "turbo run test:coverage",
    "test:coverage:unit": "turbo run test:coverage:unit",
    "test:coverage:integration": "turbo run test:coverage:integration",
    "test:watch": "turbo run test:watch",
    "test:watch:unit": "turbo run test:watch:unit",
    "test:ci": "CI=true turbo run test:coverage",
    "test:debug": "turbo run test:debug",
    "test:clear-cache": "turbo run test:clear-cache",
    "test:update-snapshots": "turbo run test:update-snapshots",
    "lint": "turbo run lint",
    "lint:fix": "turbo run lint:fix",
    "lint:check": "turbo run lint:check",
    "lint:staged": "lint-staged",
    "lint:report": "turbo run lint > lint-report.txt",
    "typecheck": "turbo run typecheck",
    "typecheck:watch": "turbo run typecheck:watch",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:staged": "prettier --write",
    "format:report": "prettier --check . > format-report.txt || true",
    "validate": "pnpm run lint && pnpm run typecheck && pnpm run test",
    "validate:quick": "pnpm run lint && pnpm run typecheck",
    "validate:full": "pnpm run validate && pnpm run security:check && pnpm run quality:gates",
    "validate:ci": "pnpm run validate:full && pnpm run test:coverage",
    "validate:pre-commit": "pnpm run lint:staged && pnpm run typecheck",
    "validate:pre-push": "pnpm run validate:full",
    "validate:release": "pnpm run validate:ci && pnpm run build:production && pnpm run docs:validate:all",
    "security:check": "pnpm audit --audit-level=moderate",
    "security:check:high": "pnpm audit --audit-level=high",
    "security:check:critical": "pnpm audit --audit-level=critical",
    "security:fix": "pnpm audit --fix",
    "security:scan": "./scripts/security-scan.sh",
    "security:scan:detailed": "./scripts/security-scan.sh --detailed",
    "security:staged": "git diff --cached --name-only | grep -E '\\.(js|ts|jsx|tsx)$' | xargs -r npx eslint --no-eslintrc --config .eslintrc.security.json || true",
    "security:report": "pnpm run security:scan > security-report.txt",
    "security:dependencies": "npm audit --json > security-dependencies.json",
    "quality:gates": "./scripts/quality-gates.sh",
    "quality:gates:strict": "./scripts/quality-gates.sh --strict",
    "quality:gates:all": "./scripts/quality-gates.sh --all",
    "quality:gates:all:strict": "./scripts/quality-gates.sh --all --strict",
    "quality:check": "pnpm run quality:gates && pnpm run security:check",
    "quality:report": "pnpm run quality:gates > quality-report.txt",
    "editorconfig:check": "npx editorconfig-checker",
    "editorconfig:generate": "npx editorconfig-generate",
    "docs:validate": "swagger-cli validate services/auth-service/docs/openapi.yaml",
    "docs:validate:all": "find services -name 'openapi.yaml' -exec swagger-cli validate {} \\;",
    "docs:generate": "redoc-cli build services/auth-service/docs/openapi.yaml --output docs/generated/auth-service.html",
    "docs:generate:all": "./scripts/generate-api-docs.sh",
    "docs:serve": "redoc-cli serve services/auth-service/docs/openapi.yaml --watch --port 8080",
    "docs:serve:all": "cd docs/generated && python -m http.server 8080",
    "docs:build": "pnpm run docs:generate:all",
    "docs:check": "pnpm run docs:validate:all",
    "client:generate": "openapi-generator-cli generate -i services/auth-service/docs/openapi.yaml -g typescript-axios -o libs/api-client/src/generated/auth",
    "client:generate:all": "./scripts/generate-clients.sh",
    "client:build": "cd libs/api-client && pnpm run build",
    "client:validate": "pnpm run client:generate:all && pnpm run client:build",
    "commitlint": "commitlint --edit",
    "commitlint:last": "commitlint --from=HEAD~1",
    "commitlint:check": "commitlint --from=HEAD~10",
    "pre-commit": "lint-staged",
    "pre-push": "pnpm run validate:pre-push",
    "db:migrate": "turbo run db:migrate",
    "db:migrate:latest": "turbo run db:migrate:latest",
    "db:migrate:rollback": "turbo run db:migrate:rollback",
    "db:migrate:status": "turbo run db:migrate:status",
    "db:seed": "turbo run db:seed",
    "db:seed:run": "turbo run db:seed:run",
    "db:reset": "turbo run db:reset",
    "db:fresh": "turbo run db:fresh",
    "db:backup": "turbo run db:backup",
    "db:restore": "turbo run db:restore",
    "db:validate": "turbo run db:validate",
    "env:check": "node scripts/check-env.js",
    "env:validate": "node scripts/validate-env.js",
    "env:example": "node scripts/generate-env-example.js",
    "clean": "turbo run clean",
    "clean:cache": "turbo run clean:cache",
    "clean:deps": "find . -name node_modules -type d -prune -exec rm -rf {} +",
    "clean:build": "find . -name dist -type d -prune -exec rm -rf {} + && find . -name build -type d -prune -exec rm -rf {} +",
    "clean:coverage": "find . -name coverage -type d -prune -exec rm -rf {} +",
    "clean:all": "pnpm run clean:deps && pnpm run clean:build && pnpm run clean:coverage",
    "install:fresh": "pnpm run clean:deps && pnpm install",
    "install:ci": "pnpm install --frozen-lockfile",
    "install:production": "pnpm install --production --frozen-lockfile",
    "docker:build": "./scripts/docker-build.sh",
    "docker:build:dev": "docker-compose -f docker-compose.dev.yml build",
    "docker:build:prod": "docker-compose -f docker-compose.prod.yml build",
    "docker:up": "docker-compose up -d",
    "docker:up:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:up:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -f",
    "docker:reset": "docker-compose down -v && docker system prune -f",
    "monitor:dev": "node --inspect=0.0.0.0:9229 scripts/monitor.js",
    "profile:memory": "node --inspect --expose-gc scripts/profile-memory.js",
    "profile:cpu": "node --prof scripts/profile-cpu.js",
    "analyze:bundle": "turbo run analyze:bundle",
    "analyze:deps": "madge --circular --extensions ts,tsx,js,jsx .",
    "perf:test": "turbo run perf:test",
    "perf:lighthouse": "lighthouse http://localhost:3000 --output json --output-path lighthouse-report.json",
    "perf:bundle": "webpack-bundle-analyzer",
    "generate:service": "node tools/generators/create-service.js",
    "generate:app": "node tools/generators/create-app.js",
    "generate:component": "node tools/generators/create-component.js",
    "generate:migration": "node tools/generators/create-migration.js",
    "generate:types": "turbo run generate:types",
    "release:prepare": "pnpm run validate:release",
    "release:version": "changeset version",
    "release:publish": "changeset publish",
    "release:tag": "git tag -a v$(node -p \"require('./package.json').version\") -m \"Release v$(node -p \"require('./package.json').version\")\"",
    "update:deps": "pnpm update --latest",
    "update:deps:interactive": "pnpm update --interactive",
    "check:outdated": "pnpm outdated",
    "check:licenses": "license-checker --summary",
    "check:size": "size-limit",
    "ci:install": "pnpm install --frozen-lockfile --prefer-offline",
    "ci:build": "pnpm run build:production",
    "ci:test": "pnpm run test:ci",
    "ci:lint": "pnpm run lint:check",
    "ci:security": "pnpm run security:scan",
    "ci:deploy:staging": "node scripts/deploy-staging.js",
    "ci:deploy:production": "node scripts/deploy-production.js",
    "logs:watch": "tail -f logs/*.log",
    "logs:clear": "rm -rf logs/*.log",
    "backup:create": "node scripts/create-backup.js",
    "backup:restore": "node scripts/restore-backup.js"
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@openapitools/openapi-generator-cli": "^2.7.0",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "editorconfig-checker": "^5.1.1",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sonarjs": "^0.23.0",
    "eslint-plugin-unicorn": "^49.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.1",
    "redoc-cli": "^0.13.21",
    "@apidevtools/swagger-cli": "^4.0.4",
    "turbo": "^1.11.2",
    "typescript": "^5.3.2"
  },
  "workspaces": [
    "apps/*",
    "libs/*",
    "services/*",
    "tools/*"
  ],
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "eslint --no-eslintrc --config .eslintrc.security.json",
      "prettier --write"
    ],
    "*.{json,yaml,yml,md,css,scss,html}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx,json}": [
      "bash -c 'echo \"🔍 Checking file size...\"; find \"$@\" -size +500k -exec echo \"⚠️  Large file detected: {}\" \\; -exec false \\; || true' --"
    ],
    "package.json": [
      "prettier --write",
      "pnpm audit --audit-level=high || echo \"⚠️  Security vulnerabilities detected in dependencies\""
    ],
    "*.{ts,tsx}": [
      "bash -c 'echo \"🔧 Type checking staged files...\"; tsc --noEmit --skipLibCheck || echo \"⚠️  TypeScript errors detected\"' --"
    ]
  }
}
